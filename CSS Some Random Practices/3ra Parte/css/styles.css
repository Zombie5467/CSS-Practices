*{ font-family: Arial, Helvetica, sans-serif; } 

fieldset {
    border: 1px solid #333;
    
}

.name--legend{
    color: #fff;
}

body{ 
    min-height: 100vh; 
    max-width: 900px; 
    margin: 0 auto; 
    padding: 1rem; 
    border-left: 1px solid #333; 
    border-right: 1px solid #333; 
    background-color: rgb(32, 31, 31);
    padding-top: 60px;
}

h1 {
    font-size: 4em;
    color: #fff;
}

/* ghost face section */
h1::before {
    content: url(../img/gf.png);
    display: block;

}

h1::after {
    content: 'Online!';
    color: lightgreen;
    margin-left: 14px;
}

/*

all practices below, belong to the following tutorial:

https://www.youtube.com/watch?v=o1HzOJfgugE&list=PLotbx4ZAAUERMIJMDM2yI8Jjb0_h8fCBk&index=16

*/

/* insolate */
.isolation-section {
    /* background-image: linear-gradient(-20deg, #b721ff 0%, #21d4fd 100%); */
    background-image: linear-gradient(-225deg, #473B7B 0%, #3584A7 51%, #30D2BE 100%);
    height: 8em;
    padding: 5%;
}

.section-title {
    color: #fff;
    font-size: 3em;
    margin: 0 0 50px 0;
}


code {
    background-color: #333;
    color: #fff;
    padding: 4px;
    border-radius: 4px;
}

.isolation {
    color: #fff;
    position: relative;
    isolation: isolate;
    font-size: 22px;
}

.isolation::before {
    content: open-quote;
    font-weight: 300;
    font-family: serif;
    font-size: 15rem;
    color: #3c3c3c;
    position: absolute;
    z-index: -1;
    top: -6.5rem;
    left: -2.4rem;
}

.isolation::after {
    content: no-open-quote;
}


/* inset */
.inset-section {
    position: relative;
    border: 5px dashed yellow;
    height: 300px;
}

.title-section {
    font-size: 2em;
}

.inset-wrapper {
    margin: 5%;
    color: #fff;
    font-size: larger;
}

.inset-wrapper p {
    line-height: 2em;
    
}


.inset {
    position: absolute;
    inset: auto 1rem 1rem 1rem;
    background-color: purple;
    padding: 1rem;
    color: #fff;
}

/* filter */
.filter-section {
    margin: 5%;
    color: #fff;
    font-size: larger;
    
}
.card-container {
    display: grid;
    gap: 1rem;
    background-color: hsl(0 0% 50% / 0.2);
    padding: 1rem;
    border-radius: 0.5rem;
    width: 300px;
    
}

#card-p {
    line-height: 2em;
}

#card-link {
    font-size: 20px;
    font-weight: bold;
    color: #8f7aec;
}

.img__wrap img{
    width: 300px;
    height: 200px;
    margin-bottom: 0;
}

#card-des {
    margin: 0 0 0 0;
    font-size: 16px;
}

.card-container i {
    font-size: 36px;
    color: black
}

.card__img {
    filter: grayscale(85%) contrast(200%);
    transition: filter 500ms ease;
}

.img__wrap:hover > .card__img,
.img__wrap:focus-within > .card__img {
    filter: grayscale(0%) contrast(100%);
}

.card-container i {
    filter: invert(100%)
    drop-shadow(0px 0px 1rem purple);
}

.name--legend{
    color: #fff;
}

body{ 
    min-height: 100vh; 
    max-width: 900px; 
    margin: 0 auto; 
    padding: 1rem; 
    border-left: 1px solid #333; 
    border-right: 1px solid #333; 
    background-color: rgb(32, 31, 31);
    padding-top: 60px;
}

html {
    scroll-behavior: smooth;
}


/* Transparent Bg Image */


.transparent--bg {
    background-image: url(../img/dbwallpaper.png);
    background-size: cover;
    background-position: center;
    color:black;
    display: grid;
    place-content: center;
    text-align: center;
    min-height: 500px;
    font-size: 4em;

    position: relative;
    isolation: isolate;
    
}

.transparent--bg::after {
    content: '';
    position: absolute;
    inset: 0;
    background: pink;
    opacity: .6;
    z-index: -1; 
   
}

/* 

inset es lo mismo que usar position top right left bottm y

el z-index esta arriba de la imagen pero no del texto porque el texto esta en el html y la imagen en el css 

https://www.youtube.com/watch?v=lRPguPbovro 

*/

.target-container {
    background-color: whitesmoke;
    width: 300px;
    height: 500px;
    object-fit: cover;
}
.box img {
    width: 100%;
    
}

.lorem {
    margin: 4%;
}

.transparent--tx {
    font-size: 4em;
    background-image: linear-gradient(to right, #b8cbb8 0%, #b8cbb8 0%, #b465da 0%, #cf6cc9 33%, #ee609c 66%, #ee609c 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
}

.btn-transition {
    font-size: 1.5em;
    font-weight: bold;
    padding: .5em;
    color: #ee609c;
    border: 4px solid #ee609c;
    border-radius: 10px;
    
    /* 
    
    transition-property: transform;
    transition-duration: 0.3s ;
    transition-timing-function: ease;
    transition-delay: ;
    
    esto se llama shorthand

    transition: transform 0.3s,background-color 0.3s, color 0.3s;

    esto se llama shorthand pero sin los valores por defectos  
    
    */
    
    transition: all 0.3s;
}

.btn-transition:hover {
    transform: translateY(-5px);
    background-color: #ee609c;
    color: white;
}

.animation-container {
    display: grid;
    justify-content: center;
    align-items: center;
}

.heading-1,
.animationOther {
    font-size: 2em;
    color: white;
}



@keyframes animationName {
    from {
        transform: translateX(-300px);
    }

    to {
        transform: translateX(0);
    }
}

.heading-1 {
    /* animation-name: animationName;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    animation-delay: 1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-fill-mode: forwards;



    esto se llama shorthand
    animation: animationName 1s ease-in-out 1s 1 normal forwards;



    esto se llama shorthand pero sin los valores por defectos */
    animation: animationName 1s ease-in-out;

    transform: translateX(-150px);

}



@keyframes animationOther {
    from {
        transform: translateX(300px);
    }

    to {
        transform: translateX(0);
    }

}

@keyframes animationFast {
    from {
        transform: translateX(300px);
    }

    to {
        transform: translateX(0);
    }

}

.animationOther {
    animation: animationOther 1s ease-out;
}

.animationFast {
    animation: animationFast 0.5s;
}

/*

esta es una forma de ahorrar codigo, tambien es util si necesitamos mas elementos con la misma animacion 

la idea es que al poner las animaciones como clases, podemos tener nuestra propia "mini libreria" y aplicar las animaciones a nuestros elementos como clases, asi tendran justo las animaciones que queramos

esta es una forma de como podemos ahorrar codigo, aninado los % que tendran el mismo valor

@keyframes bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
        transform: translate();
    }

    40% {
        transform: translate();
    }

    60% {
        transform: translate();
    }
}

.bounce {
    animation-name: bounce;
}

*/